[{"/Users/giovanizanetti/Projects/my-pomodoro/src/components/Timer/index.js":"1","/Users/giovanizanetti/Projects/my-pomodoro/src/App.js":"2","/Users/giovanizanetti/Projects/my-pomodoro/src/components/Settings/index.js":"3","/Users/giovanizanetti/Projects/my-pomodoro/src/components/playground.js":"4","/Users/giovanizanetti/Projects/my-pomodoro/src/store.js":"5","/Users/giovanizanetti/Projects/my-pomodoro/src/reducers/settings.js":"6","/Users/giovanizanetti/Projects/my-pomodoro/src/types.js":"7"},{"size":2379,"mtime":1606400960926,"results":"8","hashOfConfig":"9"},{"size":508,"mtime":1606496741117,"results":"10","hashOfConfig":"9"},{"size":4585,"mtime":1606509154440,"results":"11","hashOfConfig":"9"},{"size":1844,"mtime":1606429594873,"results":"12","hashOfConfig":"9"},{"size":739,"mtime":1606509009381,"results":"13","hashOfConfig":"9"},{"size":2235,"mtime":1606508703417,"results":"14","hashOfConfig":"9"},{"size":933,"mtime":1606499895249,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1b58vae",{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/giovanizanetti/Projects/my-pomodoro/src/components/Timer/index.js",["31"],"/Users/giovanizanetti/Projects/my-pomodoro/src/App.js",["32"],"/Users/giovanizanetti/Projects/my-pomodoro/src/components/Settings/index.js",["33","34","35","36","37","38","39","40","41","42","43","44"],"import { useState, useContext } from 'react'\nimport { Context } from '../../store'\n\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  Button,\n  DialogActions,\n  Typography,\n  Icon,\n  IconButton,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  Switch,\n  MenuItem,\n  InputLabel,\n  Select,\n} from '@material-ui/core'\n\nimport {\n  SET_PLAY_SONG,\n  SET_ALARM_SONG,\n  SET_SEND_NOTIFICATIONS,\n  SET_POMODORO_LENGTH,\n  SET_SHORT_BREAK_LENGTH,\n  SET_LONG_BREAK_LENGTH,\n  SET_LUNCH_BREAK_LENGTH,\n  SET_DISPLAY_BREAK_MENU,\n  SET_POMODORO_COUNT,\n  SET_POMODORO_DAILY_TARGET,\n  SET_POMODORO_WEEKLY_TARGET,\n  SET_DISPLAY_DOC_TITLE_TIMER,\n  // SET_ERROR,\n  SET_AUTOMATIC_BREAK,\n  SET_AUTOMATIC_POMODORO,\n} from '../../types'\n\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  modalHeader: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  button: {\n    display: 'block',\n    marginTop: theme.spacing(2),\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}))\n\nconst Settings = () => {\n  const [state, dispatch] = useContext(Context)\n\n  const [open, setOpen] = useState(false)\n  const { modalHeader, button, formControl } = useStyles()\n\n  return (\n    <div>\n      <Button variant='outlined' color='primary' onClick={() => setOpen(true)}>\n        Open dialog\n      </Button>\n      <Dialog\n        onClose={() => setOpen(false)}\n        aria-labelledby='customized-dialog-title'\n        open={open}\n      >\n        <DialogTitle\n          id='customized-dialog-title'\n          onClose={() => setOpen(false)}\n        >\n          <div className={modalHeader}>\n            Settings\n            <IconButton onClick={() => setOpen(false)}>\n              <Icon>close</Icon>\n            </IconButton>\n          </div>\n        </DialogTitle>\n        <DialogContent dividers>\n          <Typography gutterBottom>\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\n            dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta\n            ac consectetur ac, vestibulum at eros.\n          </Typography>\n          <FormControl component='fieldset'>\n            <FormGroup>\n              <FormControlLabel\n                control={\n                  <Switch\n                    checked={state.displayDocTitleTimer}\n                    onChange={() =>\n                      dispatch({ type: SET_DISPLAY_DOC_TITLE_TIMER })\n                    }\n                    name='Timer indication on the browser title'\n                  />\n                }\n                label='Timer indication on the browser title'\n              />\n              <FormControlLabel\n                control={\n                  <Switch\n                    checked={state.sendNotifications}\n                    onChange={() => dispatch({ type: SET_SEND_NOTIFICATIONS })}\n                    name='Browser notifications'\n                  />\n                }\n                label='Browser notifications'\n              />\n              <FormControlLabel\n                control={\n                  <Switch\n                    checked={state.playSong}\n                    onChange={() => dispatch({ type: SET_PLAY_SONG })}\n                    name='Alarm'\n                  />\n                }\n                label='Alarm'\n              />\n\n              <FormControl className={formControl}>\n                <InputLabel id='demo-controlled-open-select-label'>\n                  Select a sound for the alarm\n                </InputLabel>\n                <Select\n                  labelId='demo-controlled-open-select-label'\n                  id='demo-controlled-open-select'\n                  open={false}\n                  // open={open}\n                  // onClose={handleClose}\n                  // onOpen={handleOpen}\n                  // value={age}\n                  // onChange={handleChange}\n                  value='10'\n                >\n                  <MenuItem value=''>\n                    <em>None</em>\n                  </MenuItem>\n                  <MenuItem value={10}>Ten</MenuItem>\n                  <MenuItem value={20}>Twenty</MenuItem>\n                  <MenuItem value={30}>Thirty</MenuItem>\n                </Select>\n              </FormControl>\n            </FormGroup>\n          </FormControl>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={() => setOpen(false)} color='primary'>\n            Save changes\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n\nexport default Settings\n","/Users/giovanizanetti/Projects/my-pomodoro/src/components/playground.js",[],"/Users/giovanizanetti/Projects/my-pomodoro/src/store.js",[],"/Users/giovanizanetti/Projects/my-pomodoro/src/reducers/settings.js",[],"/Users/giovanizanetti/Projects/my-pomodoro/src/types.js",[],{"ruleId":"45","severity":1,"message":"46","line":20,"column":20,"nodeType":"47","messageId":"48","endLine":20,"endColumn":31},{"ruleId":"45","severity":1,"message":"49","line":3,"column":8,"nodeType":"47","messageId":"48","endLine":3,"endColumn":13},{"ruleId":"45","severity":1,"message":"50","line":24,"column":3,"nodeType":"47","messageId":"48","endLine":24,"endColumn":17},{"ruleId":"45","severity":1,"message":"51","line":26,"column":3,"nodeType":"47","messageId":"48","endLine":26,"endColumn":22},{"ruleId":"45","severity":1,"message":"52","line":27,"column":3,"nodeType":"47","messageId":"48","endLine":27,"endColumn":25},{"ruleId":"45","severity":1,"message":"53","line":28,"column":3,"nodeType":"47","messageId":"48","endLine":28,"endColumn":24},{"ruleId":"45","severity":1,"message":"54","line":29,"column":3,"nodeType":"47","messageId":"48","endLine":29,"endColumn":25},{"ruleId":"45","severity":1,"message":"55","line":30,"column":3,"nodeType":"47","messageId":"48","endLine":30,"endColumn":25},{"ruleId":"45","severity":1,"message":"56","line":31,"column":3,"nodeType":"47","messageId":"48","endLine":31,"endColumn":21},{"ruleId":"45","severity":1,"message":"57","line":32,"column":3,"nodeType":"47","messageId":"48","endLine":32,"endColumn":28},{"ruleId":"45","severity":1,"message":"58","line":33,"column":3,"nodeType":"47","messageId":"48","endLine":33,"endColumn":29},{"ruleId":"45","severity":1,"message":"59","line":36,"column":3,"nodeType":"47","messageId":"48","endLine":36,"endColumn":22},{"ruleId":"45","severity":1,"message":"60","line":37,"column":3,"nodeType":"47","messageId":"48","endLine":37,"endColumn":25},{"ruleId":"45","severity":1,"message":"61","line":62,"column":24,"nodeType":"47","messageId":"48","endLine":62,"endColumn":30},"no-unused-vars","'setPlaySong' is assigned a value but never used.","Identifier","unusedVar","'Timer' is defined but never used.","'SET_ALARM_SONG' is defined but never used.","'SET_POMODORO_LENGTH' is defined but never used.","'SET_SHORT_BREAK_LENGTH' is defined but never used.","'SET_LONG_BREAK_LENGTH' is defined but never used.","'SET_LUNCH_BREAK_LENGTH' is defined but never used.","'SET_DISPLAY_BREAK_MENU' is defined but never used.","'SET_POMODORO_COUNT' is defined but never used.","'SET_POMODORO_DAILY_TARGET' is defined but never used.","'SET_POMODORO_WEEKLY_TARGET' is defined but never used.","'SET_AUTOMATIC_BREAK' is defined but never used.","'SET_AUTOMATIC_POMODORO' is defined but never used.","'button' is assigned a value but never used."]